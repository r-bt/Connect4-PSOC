ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBUART_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBUART_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBUART_EP_1_ISR, %function
  24              	USBUART_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBUART_episr.c"
   1:.\Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USBUART_episr.c **** * \file USBUART_episr.c
   3:.\Generated_Source\PSoC5/USBUART_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USBUART_episr.c **** *
   5:.\Generated_Source\PSoC5/USBUART_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USBUART_episr.c **** *
   8:.\Generated_Source\PSoC5/USBUART_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USBUART_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USBUART_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USBUART_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  16:.\Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:.\Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:.\Generated_Source\PSoC5/USBUART_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  20:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  21:.\Generated_Source\PSoC5/USBUART_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USBUART_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USBUART_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  26:.\Generated_Source\PSoC5/USBUART_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  28:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  29:.\Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USBUART_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 2


  32:.\Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
  34:.\Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
  36:.\Generated_Source\PSoC5/USBUART_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USBUART_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  40:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  44:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  46:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  48:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
  51:.\Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USBUART_episr.c ****     
  55:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 0A4A     		ldr	r2, .L3
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 03F0FE03 		and	r3, r3, #254
  36 0008 1370     		strb	r3, [r2]
  56:.\Generated_Source\PSoC5/USBUART_episr.c ****             
  57:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USBUART_episr.c ****         */
  61:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
  65:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  37              		.loc 1 66 0
  38 000a 094B     		ldr	r3, .L3+4
  39 000c 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:.\Generated_Source\PSoC5/USBUART_episr.c ****             
  68:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000e 094B     		ldr	r3, .L3+8
  42 0010 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  43 0012 03F00303 		and	r3, r3, #3
  44 0016 012B     		cmp	r3, #1
  45 0018 04D0     		beq	.L2
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 3


  70:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
  71:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 71 0
  47 001a 064A     		ldr	r2, .L3+8
  48 001c D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  49 001e 83F08003 		eor	r3, r3, #128
  50 0022 D373     		strb	r3, [r2, #15]
  51              	.L2:
  72:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
  73:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  74:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USBUART_episr.c ****             */
  80:.\Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  52              		.loc 1 80 0
  53 0024 0122     		movs	r2, #1
  54 0026 034B     		ldr	r3, .L3+8
  55 0028 5A73     		strb	r2, [r3, #13]
  56 002a 7047     		bx	lr
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 002c 0B600040 		.word	1073766411
  61 0030 FC5F0040 		.word	1073766396
  62 0034 00000000 		.word	USBUART_EP
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
  66              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
  67              		.align	2
  68              		.global	USBUART_EP_2_ISR
  69              		.thumb
  70              		.thumb_func
  71              		.type	USBUART_EP_2_ISR, %function
  72              	USBUART_EP_2_ISR:
  73              	.LFB1:
  81:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
  82:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  83:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
  88:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
  90:.\Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USBUART_episr.c ****     
  93:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  95:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USBUART_episr.c **** 
  97:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 4


  99:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 101:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 104:.\Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USBUART_episr.c ****     }
 108:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 109:.\Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 111:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 112:.\Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:.\Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 117:.\Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 119:.\Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USBUART_episr.c ****     {
  74              		.loc 1 121 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
 122:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 126:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 128:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 130:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
 133:.\Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 137:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
  79              		.loc 1 137 0
  80 0000 0B4A     		ldr	r2, .L7
  81 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 0004 03F0FD03 		and	r3, r3, #253
  83 0008 1370     		strb	r3, [r2]
 138:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 139:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USBUART_episr.c ****         */
 143:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 5


 146:.\Generated_Source\PSoC5/USBUART_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
  84              		.loc 1 148 0
  85 000a 0A4B     		ldr	r3, .L7+4
  86 000c 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:.\Generated_Source\PSoC5/USBUART_episr.c ****             
 150:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
  87              		.loc 1 151 0
  88 0010 094B     		ldr	r3, .L7+8
  89 0012 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  90 0014 03F00303 		and	r3, r3, #3
  91 0018 012B     		cmp	r3, #1
  92 001a 04D0     		beq	.L6
 152:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 153:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  93              		.loc 1 153 0
  94 001c 064A     		ldr	r2, .L7+8
  95 001e D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  96 0020 83F08003 		eor	r3, r3, #128
  97 0024 D376     		strb	r3, [r2, #27]
  98              	.L6:
 154:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 155:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 156:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USBUART_episr.c ****             */
 162:.\Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
  99              		.loc 1 162 0
 100 0026 0122     		movs	r2, #1
 101 0028 034B     		ldr	r3, .L7+8
 102 002a 5A76     		strb	r2, [r3, #25]
 103 002c 7047     		bx	lr
 104              	.L8:
 105 002e 00BF     		.align	2
 106              	.L7:
 107 0030 0B600040 		.word	1073766411
 108 0034 FC5F0040 		.word	1073766396
 109 0038 00000000 		.word	USBUART_EP
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 113              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
 114              		.align	2
 115              		.global	USBUART_EP_3_ISR
 116              		.thumb
 117              		.thumb_func
 118              		.type	USBUART_EP_3_ISR, %function
 119              	USBUART_EP_3_ISR:
 120              	.LFB2:
 163:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 164:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 165:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 6


 166:.\Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
 169:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 170:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 172:.\Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USBUART_episr.c ****     
 175:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 177:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 179:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 183:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 186:.\Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 188:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USBUART_episr.c ****     }
 190:.\Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 192:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 193:.\Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:.\Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 198:.\Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 200:.\Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USBUART_episr.c ****     {
 121              		.loc 1 202 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 203:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 207:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 209:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 211:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
 214:.\Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 7


 218:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 126              		.loc 1 218 0
 127 0000 0D4A     		ldr	r2, .L11
 128 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 129 0004 03F0FB03 		and	r3, r3, #251
 130 0008 1370     		strb	r3, [r2]
 219:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 220:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:.\Generated_Source\PSoC5/USBUART_episr.c ****         */
 224:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USBUART_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 131              		.loc 1 229 0
 132 000a 0C4B     		ldr	r3, .L11+4
 133 000c 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 230:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 231:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 134              		.loc 1 232 0
 135 0010 0B4B     		ldr	r3, .L11+8
 136 0012 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 137 0016 03F00303 		and	r3, r3, #3
 138 001a 012B     		cmp	r3, #1
 139 001c 06D0     		beq	.L10
 233:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 234:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 140              		.loc 1 234 0
 141 001e 084A     		ldr	r2, .L11+8
 142 0020 92F82730 		ldrb	r3, [r2, #39]	@ zero_extendqisi2
 143 0024 83F08003 		eor	r3, r3, #128
 144 0028 82F82730 		strb	r3, [r2, #39]
 145              	.L10:
 235:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 236:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 237:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USBUART_episr.c ****             */
 243:.\Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 146              		.loc 1 243 0
 147 002c 0122     		movs	r2, #1
 148 002e 044B     		ldr	r3, .L11+8
 149 0030 83F82520 		strb	r2, [r3, #37]
 150 0034 7047     		bx	lr
 151              	.L12:
 152 0036 00BF     		.align	2
 153              	.L11:
 154 0038 0B600040 		.word	1073766411
 155 003c FC5F0040 		.word	1073766396
 156 0040 00000000 		.word	USBUART_EP
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 8


 157              		.cfi_endproc
 158              	.LFE2:
 159              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
 160              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 161              		.align	2
 162              		.global	USBUART_SOF_ISR
 163              		.thumb
 164              		.thumb_func
 165              		.type	USBUART_SOF_ISR, %function
 166              	USBUART_SOF_ISR:
 167              	.LFB3:
 244:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 245:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 246:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 251:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 253:.\Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 256:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 258:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 260:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 264:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 267:.\Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 269:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC5/USBUART_episr.c ****     }
 271:.\Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 273:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 274:.\Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:.\Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 279:.\Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 281:.\Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USBUART_episr.c ****     {
 284:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 288:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 9


 290:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 292:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
 295:.\Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 299:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 301:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USBUART_episr.c ****         */
 305:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
 309:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 312:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 315:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 317:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 318:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USBUART_episr.c ****             */
 324:.\Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 326:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 327:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 332:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 334:.\Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 337:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 339:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 341:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 345:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 10


 347:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 348:.\Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 350:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USBUART_episr.c ****     }
 352:.\Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 354:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 355:.\Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:.\Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 360:.\Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 362:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 363:.\Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 364:.\Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USBUART_episr.c ****     {
 366:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 370:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 372:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 374:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
 377:.\Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 381:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USBUART_episr.c ****     
 383:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USBUART_episr.c ****         */
 387:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USBUART_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 394:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 397:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 399:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 400:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 11


 404:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USBUART_episr.c ****             */
 406:.\Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 408:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 409:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 414:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 416:.\Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 419:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 421:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 423:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 427:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 430:.\Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USBUART_episr.c ****     }
 434:.\Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 436:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 437:.\Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:.\Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 442:.\Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 444:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 445:.\Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USBUART_episr.c ****     {
 448:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 452:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 454:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 456:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
 459:.\Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 12


 461:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 463:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 465:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC5/USBUART_episr.c ****         */
 469:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
 473:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 476:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 479:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 481:.\Generated_Source\PSoC5/USBUART_episr.c ****             
 482:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USBUART_episr.c ****             */
 488:.\Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 490:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 491:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 496:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 498:.\Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 501:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 503:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 505:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 509:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 512:.\Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 514:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC5/USBUART_episr.c ****     }
 516:.\Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 13


 518:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 519:.\Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:.\Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 524:.\Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 526:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 527:.\Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USBUART_episr.c ****     {
 530:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 534:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 536:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 538:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
 541:.\Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USBUART_episr.c ****     
 545:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 547:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USBUART_episr.c ****         */
 551:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USBUART_episr.c ****         {           
 555:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 558:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 561:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 563:.\Generated_Source\PSoC5/USBUART_episr.c ****             
 564:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:.\Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USBUART_episr.c ****             */
 570:.\Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 572:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 573:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 574:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 14


 575:.\Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 579:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 581:.\Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 584:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 586:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 588:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 592:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 595:.\Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 597:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USBUART_episr.c ****     }
 599:.\Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 601:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 602:.\Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:.\Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 607:.\Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 609:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 610:.\Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:.\Generated_Source\PSoC5/USBUART_episr.c ****     {
 613:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 617:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 619:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 621:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
 624:.\Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 628:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 630:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 15


 632:.\Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USBUART_episr.c ****         */
 634:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USBUART_episr.c ****         {
 638:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:.\Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 641:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 644:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 646:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 647:.\Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USBUART_episr.c ****             */
 653:.\Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 655:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 656:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:.\Generated_Source\PSoC5/USBUART_episr.c ****             {
 661:.\Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USBUART_episr.c ****             }
 663:.\Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 666:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 668:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 670:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 674:.\Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USBUART_episr.c ****         
 677:.\Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USBUART_episr.c ****         }
 679:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USBUART_episr.c ****     }
 681:.\Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 683:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 684:.\Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:.\Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 16


 689:.\Generated_Source\PSoC5/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 691:.\Generated_Source\PSoC5/USBUART_episr.c ****     *
 692:.\Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
 694:.\Generated_Source\PSoC5/USBUART_episr.c ****     {
 168              		.loc 1 694 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 0000 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE3:
 176              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 177 0002 00BF     		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 178              		.align	2
 179              		.global	USBUART_BUS_RESET_ISR
 180              		.thumb
 181              		.thumb_func
 182              		.type	USBUART_BUS_RESET_ISR, %function
 183              	USBUART_BUS_RESET_ISR:
 184              	.LFB4:
 695:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 699:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 701:.\Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 703:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 705:.\Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USBUART_episr.c ****     }
 709:.\Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 711:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 712:.\Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USBUART_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USBUART_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USBUART_episr.c **** *
 717:.\Generated_Source\PSoC5/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USBUART_episr.c **** *
 720:.\Generated_Source\PSoC5/USBUART_episr.c **** *
 721:.\Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USBUART_episr.c **** {
 185              		.loc 1 723 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		.loc 1 723 0
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 17


 190 0000 08B5     		push	{r3, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 724:.\Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 728:.\Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 730:.\Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 732:.\Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC5/USBUART_episr.c **** 
 734:.\Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ReInitComponent();
 194              		.loc 1 734 0
 195 0002 FFF7FEFF 		bl	USBUART_ReInitComponent
 196              	.LVL0:
 197 0006 08BD     		pop	{r3, pc}
 198              		.cfi_endproc
 199              	.LFE4:
 200              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 201              		.text
 202              	.Letext0:
 203              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 204              		.file 3 ".\\Generated_Source\\PSoC5\\USBUART.h"
 205              		.file 4 ".\\Generated_Source\\PSoC5\\USBUART_pvt.h"
 206              		.section	.debug_info,"",%progbits
 207              	.Ldebug_info0:
 208 0000 47020000 		.4byte	0x247
 209 0004 0400     		.2byte	0x4
 210 0006 00000000 		.4byte	.Ldebug_abbrev0
 211 000a 04       		.byte	0x4
 212 000b 01       		.uleb128 0x1
 213 000c 35000000 		.4byte	.LASF37
 214 0010 01       		.byte	0x1
 215 0011 15020000 		.4byte	.LASF38
 216 0015 02010000 		.4byte	.LASF39
 217 0019 00000000 		.4byte	.Ldebug_ranges0+0
 218 001d 00000000 		.4byte	0
 219 0021 00000000 		.4byte	.Ldebug_line0
 220 0025 02       		.uleb128 0x2
 221 0026 01       		.byte	0x1
 222 0027 06       		.byte	0x6
 223 0028 DE020000 		.4byte	.LASF0
 224 002c 02       		.uleb128 0x2
 225 002d 01       		.byte	0x1
 226 002e 08       		.byte	0x8
 227 002f AE010000 		.4byte	.LASF1
 228 0033 02       		.uleb128 0x2
 229 0034 02       		.byte	0x2
 230 0035 05       		.byte	0x5
 231 0036 82020000 		.4byte	.LASF2
 232 003a 02       		.uleb128 0x2
 233 003b 02       		.byte	0x2
 234 003c 07       		.byte	0x7
 235 003d CE000000 		.4byte	.LASF3
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 18


 236 0041 02       		.uleb128 0x2
 237 0042 04       		.byte	0x4
 238 0043 05       		.byte	0x5
 239 0044 B2020000 		.4byte	.LASF4
 240 0048 02       		.uleb128 0x2
 241 0049 04       		.byte	0x4
 242 004a 07       		.byte	0x7
 243 004b 7A010000 		.4byte	.LASF5
 244 004f 02       		.uleb128 0x2
 245 0050 08       		.byte	0x8
 246 0051 05       		.byte	0x5
 247 0052 64020000 		.4byte	.LASF6
 248 0056 02       		.uleb128 0x2
 249 0057 08       		.byte	0x8
 250 0058 07       		.byte	0x7
 251 0059 F4010000 		.4byte	.LASF7
 252 005d 03       		.uleb128 0x3
 253 005e 04       		.byte	0x4
 254 005f 05       		.byte	0x5
 255 0060 696E7400 		.ascii	"int\000"
 256 0064 02       		.uleb128 0x2
 257 0065 04       		.byte	0x4
 258 0066 07       		.byte	0x7
 259 0067 E7010000 		.4byte	.LASF8
 260 006b 04       		.uleb128 0x4
 261 006c A2020000 		.4byte	.LASF9
 262 0070 02       		.byte	0x2
 263 0071 9201     		.2byte	0x192
 264 0073 2C000000 		.4byte	0x2c
 265 0077 04       		.uleb128 0x4
 266 0078 D5010000 		.4byte	.LASF10
 267 007c 02       		.byte	0x2
 268 007d 9301     		.2byte	0x193
 269 007f 3A000000 		.4byte	0x3a
 270 0083 02       		.uleb128 0x2
 271 0084 04       		.byte	0x4
 272 0085 04       		.byte	0x4
 273 0086 2F000000 		.4byte	.LASF11
 274 008a 02       		.uleb128 0x2
 275 008b 08       		.byte	0x8
 276 008c 04       		.byte	0x4
 277 008d BC010000 		.4byte	.LASF12
 278 0091 02       		.uleb128 0x2
 279 0092 01       		.byte	0x1
 280 0093 08       		.byte	0x8
 281 0094 72020000 		.4byte	.LASF13
 282 0098 04       		.uleb128 0x4
 283 0099 75010000 		.4byte	.LASF14
 284 009d 02       		.byte	0x2
 285 009e 3C02     		.2byte	0x23c
 286 00a0 A4000000 		.4byte	0xa4
 287 00a4 05       		.uleb128 0x5
 288 00a5 6B000000 		.4byte	0x6b
 289 00a9 02       		.uleb128 0x2
 290 00aa 08       		.byte	0x8
 291 00ab 04       		.byte	0x4
 292 00ac D2020000 		.4byte	.LASF15
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 19


 293 00b0 02       		.uleb128 0x2
 294 00b1 04       		.byte	0x4
 295 00b2 07       		.byte	0x7
 296 00b3 54020000 		.4byte	.LASF16
 297 00b7 06       		.uleb128 0x6
 298 00b8 0C       		.byte	0xc
 299 00b9 03       		.byte	0x3
 300 00ba 8D       		.byte	0x8d
 301 00bb 2C010000 		.4byte	0x12c
 302 00bf 07       		.uleb128 0x7
 303 00c0 C3010000 		.4byte	.LASF17
 304 00c4 03       		.byte	0x3
 305 00c5 8F       		.byte	0x8f
 306 00c6 6B000000 		.4byte	0x6b
 307 00ca 00       		.byte	0
 308 00cb 07       		.uleb128 0x7
 309 00cc DC010000 		.4byte	.LASF18
 310 00d0 03       		.byte	0x3
 311 00d1 90       		.byte	0x90
 312 00d2 6B000000 		.4byte	0x6b
 313 00d6 01       		.byte	0x1
 314 00d7 07       		.uleb128 0x7
 315 00d8 0B020000 		.4byte	.LASF19
 316 00dc 03       		.byte	0x3
 317 00dd 91       		.byte	0x91
 318 00de 6B000000 		.4byte	0x6b
 319 00e2 02       		.byte	0x2
 320 00e3 07       		.uleb128 0x7
 321 00e4 61010000 		.4byte	.LASF20
 322 00e8 03       		.byte	0x3
 323 00e9 92       		.byte	0x92
 324 00ea 6B000000 		.4byte	0x6b
 325 00ee 03       		.byte	0x3
 326 00ef 07       		.uleb128 0x7
 327 00f0 8C010000 		.4byte	.LASF21
 328 00f4 03       		.byte	0x3
 329 00f5 93       		.byte	0x93
 330 00f6 6B000000 		.4byte	0x6b
 331 00fa 04       		.byte	0x4
 332 00fb 07       		.uleb128 0x7
 333 00fc 5D020000 		.4byte	.LASF22
 334 0100 03       		.byte	0x3
 335 0101 94       		.byte	0x94
 336 0102 6B000000 		.4byte	0x6b
 337 0106 05       		.byte	0x5
 338 0107 07       		.uleb128 0x7
 339 0108 CA010000 		.4byte	.LASF23
 340 010c 03       		.byte	0x3
 341 010d 95       		.byte	0x95
 342 010e 77000000 		.4byte	0x77
 343 0112 06       		.byte	0x6
 344 0113 07       		.uleb128 0x7
 345 0114 77020000 		.4byte	.LASF24
 346 0118 03       		.byte	0x3
 347 0119 96       		.byte	0x96
 348 011a 77000000 		.4byte	0x77
 349 011e 08       		.byte	0x8
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 20


 350 011f 07       		.uleb128 0x7
 351 0120 A8020000 		.4byte	.LASF25
 352 0124 03       		.byte	0x3
 353 0125 97       		.byte	0x97
 354 0126 6B000000 		.4byte	0x6b
 355 012a 0A       		.byte	0xa
 356 012b 00       		.byte	0
 357 012c 08       		.uleb128 0x8
 358 012d BB020000 		.4byte	.LASF26
 359 0131 03       		.byte	0x3
 360 0132 98       		.byte	0x98
 361 0133 B7000000 		.4byte	0xb7
 362 0137 06       		.uleb128 0x6
 363 0138 10       		.byte	0x10
 364 0139 03       		.byte	0x3
 365 013a D4       		.byte	0xd4
 366 013b 70010000 		.4byte	0x170
 367 013f 07       		.uleb128 0x7
 368 0140 53010000 		.4byte	.LASF27
 369 0144 03       		.byte	0x3
 370 0145 D6       		.byte	0xd6
 371 0146 6B000000 		.4byte	0x6b
 372 014a 00       		.byte	0
 373 014b 07       		.uleb128 0x7
 374 014c 5A010000 		.4byte	.LASF28
 375 0150 03       		.byte	0x3
 376 0151 D7       		.byte	0xd7
 377 0152 6B000000 		.4byte	0x6b
 378 0156 01       		.byte	0x1
 379 0157 07       		.uleb128 0x7
 380 0158 29000000 		.4byte	.LASF29
 381 015c 03       		.byte	0x3
 382 015d D8       		.byte	0xd8
 383 015e 6B000000 		.4byte	0x6b
 384 0162 02       		.byte	0x2
 385 0163 09       		.uleb128 0x9
 386 0164 67617000 		.ascii	"gap\000"
 387 0168 03       		.byte	0x3
 388 0169 D9       		.byte	0xd9
 389 016a 70010000 		.4byte	0x170
 390 016e 03       		.byte	0x3
 391 016f 00       		.byte	0
 392 0170 0A       		.uleb128 0xa
 393 0171 6B000000 		.4byte	0x6b
 394 0175 80010000 		.4byte	0x180
 395 0179 0B       		.uleb128 0xb
 396 017a B0000000 		.4byte	0xb0
 397 017e 0C       		.byte	0xc
 398 017f 00       		.byte	0
 399 0180 08       		.uleb128 0x8
 400 0181 3E020000 		.4byte	.LASF30
 401 0185 03       		.byte	0x3
 402 0186 DA       		.byte	0xda
 403 0187 37010000 		.4byte	0x137
 404 018b 0C       		.uleb128 0xc
 405 018c 90       		.byte	0x90
 406 018d 03       		.byte	0x3
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 21


 407 018e 0E01     		.2byte	0x10e
 408 0190 A2010000 		.4byte	0x1a2
 409 0194 0D       		.uleb128 0xd
 410 0195 91010000 		.4byte	.LASF31
 411 0199 03       		.byte	0x3
 412 019a 1001     		.2byte	0x110
 413 019c A2010000 		.4byte	0x1a2
 414 01a0 00       		.byte	0
 415 01a1 00       		.byte	0
 416 01a2 0A       		.uleb128 0xa
 417 01a3 80010000 		.4byte	0x180
 418 01a7 B2010000 		.4byte	0x1b2
 419 01ab 0B       		.uleb128 0xb
 420 01ac B0000000 		.4byte	0xb0
 421 01b0 08       		.byte	0x8
 422 01b1 00       		.byte	0
 423 01b2 04       		.uleb128 0x4
 424 01b3 97010000 		.4byte	.LASF32
 425 01b7 03       		.byte	0x3
 426 01b8 1101     		.2byte	0x111
 427 01ba 8B010000 		.4byte	0x18b
 428 01be 0E       		.uleb128 0xe
 429 01bf EA020000 		.4byte	.LASF33
 430 01c3 01       		.byte	0x1
 431 01c4 25       		.byte	0x25
 432 01c5 00000000 		.4byte	.LFB0
 433 01c9 38000000 		.4byte	.LFE0-.LFB0
 434 01cd 01       		.uleb128 0x1
 435 01ce 9C       		.byte	0x9c
 436 01cf 0E       		.uleb128 0xe
 437 01d0 E1000000 		.4byte	.LASF34
 438 01d4 01       		.byte	0x1
 439 01d5 78       		.byte	0x78
 440 01d6 00000000 		.4byte	.LFB1
 441 01da 3C000000 		.4byte	.LFE1-.LFB1
 442 01de 01       		.uleb128 0x1
 443 01df 9C       		.byte	0x9c
 444 01e0 0E       		.uleb128 0xe
 445 01e1 00000000 		.4byte	.LASF35
 446 01e5 01       		.byte	0x1
 447 01e6 C9       		.byte	0xc9
 448 01e7 00000000 		.4byte	.LFB2
 449 01eb 44000000 		.4byte	.LFE2-.LFB2
 450 01ef 01       		.uleb128 0x1
 451 01f0 9C       		.byte	0x9c
 452 01f1 0F       		.uleb128 0xf
 453 01f2 F2000000 		.4byte	.LASF36
 454 01f6 01       		.byte	0x1
 455 01f7 B502     		.2byte	0x2b5
 456 01f9 00000000 		.4byte	.LFB3
 457 01fd 02000000 		.4byte	.LFE3-.LFB3
 458 0201 01       		.uleb128 0x1
 459 0202 9C       		.byte	0x9c
 460 0203 10       		.uleb128 0x10
 461 0204 8C020000 		.4byte	.LASF40
 462 0208 01       		.byte	0x1
 463 0209 D202     		.2byte	0x2d2
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 22


 464 020b 00000000 		.4byte	.LFB4
 465 020f 08000000 		.4byte	.LFE4-.LFB4
 466 0213 01       		.uleb128 0x1
 467 0214 9C       		.byte	0x9c
 468 0215 23020000 		.4byte	0x223
 469 0219 11       		.uleb128 0x11
 470 021a 06000000 		.4byte	.LVL0
 471 021e 43020000 		.4byte	0x243
 472 0222 00       		.byte	0
 473 0223 0A       		.uleb128 0xa
 474 0224 2C010000 		.4byte	0x12c
 475 0228 33020000 		.4byte	0x233
 476 022c 0B       		.uleb128 0xb
 477 022d B0000000 		.4byte	0xb0
 478 0231 08       		.byte	0x8
 479 0232 00       		.byte	0
 480 0233 12       		.uleb128 0x12
 481 0234 6A010000 		.4byte	.LASF41
 482 0238 04       		.byte	0x4
 483 0239 79       		.byte	0x79
 484 023a 3E020000 		.4byte	0x23e
 485 023e 05       		.uleb128 0x5
 486 023f 23020000 		.4byte	0x223
 487 0243 13       		.uleb128 0x13
 488 0244 11000000 		.4byte	.LASF42
 489 0248 04       		.byte	0x4
 490 0249 A4       		.byte	0xa4
 491 024a 00       		.byte	0
 492              		.section	.debug_abbrev,"",%progbits
 493              	.Ldebug_abbrev0:
 494 0000 01       		.uleb128 0x1
 495 0001 11       		.uleb128 0x11
 496 0002 01       		.byte	0x1
 497 0003 25       		.uleb128 0x25
 498 0004 0E       		.uleb128 0xe
 499 0005 13       		.uleb128 0x13
 500 0006 0B       		.uleb128 0xb
 501 0007 03       		.uleb128 0x3
 502 0008 0E       		.uleb128 0xe
 503 0009 1B       		.uleb128 0x1b
 504 000a 0E       		.uleb128 0xe
 505 000b 55       		.uleb128 0x55
 506 000c 17       		.uleb128 0x17
 507 000d 11       		.uleb128 0x11
 508 000e 01       		.uleb128 0x1
 509 000f 10       		.uleb128 0x10
 510 0010 17       		.uleb128 0x17
 511 0011 00       		.byte	0
 512 0012 00       		.byte	0
 513 0013 02       		.uleb128 0x2
 514 0014 24       		.uleb128 0x24
 515 0015 00       		.byte	0
 516 0016 0B       		.uleb128 0xb
 517 0017 0B       		.uleb128 0xb
 518 0018 3E       		.uleb128 0x3e
 519 0019 0B       		.uleb128 0xb
 520 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 23


 521 001b 0E       		.uleb128 0xe
 522 001c 00       		.byte	0
 523 001d 00       		.byte	0
 524 001e 03       		.uleb128 0x3
 525 001f 24       		.uleb128 0x24
 526 0020 00       		.byte	0
 527 0021 0B       		.uleb128 0xb
 528 0022 0B       		.uleb128 0xb
 529 0023 3E       		.uleb128 0x3e
 530 0024 0B       		.uleb128 0xb
 531 0025 03       		.uleb128 0x3
 532 0026 08       		.uleb128 0x8
 533 0027 00       		.byte	0
 534 0028 00       		.byte	0
 535 0029 04       		.uleb128 0x4
 536 002a 16       		.uleb128 0x16
 537 002b 00       		.byte	0
 538 002c 03       		.uleb128 0x3
 539 002d 0E       		.uleb128 0xe
 540 002e 3A       		.uleb128 0x3a
 541 002f 0B       		.uleb128 0xb
 542 0030 3B       		.uleb128 0x3b
 543 0031 05       		.uleb128 0x5
 544 0032 49       		.uleb128 0x49
 545 0033 13       		.uleb128 0x13
 546 0034 00       		.byte	0
 547 0035 00       		.byte	0
 548 0036 05       		.uleb128 0x5
 549 0037 35       		.uleb128 0x35
 550 0038 00       		.byte	0
 551 0039 49       		.uleb128 0x49
 552 003a 13       		.uleb128 0x13
 553 003b 00       		.byte	0
 554 003c 00       		.byte	0
 555 003d 06       		.uleb128 0x6
 556 003e 13       		.uleb128 0x13
 557 003f 01       		.byte	0x1
 558 0040 0B       		.uleb128 0xb
 559 0041 0B       		.uleb128 0xb
 560 0042 3A       		.uleb128 0x3a
 561 0043 0B       		.uleb128 0xb
 562 0044 3B       		.uleb128 0x3b
 563 0045 0B       		.uleb128 0xb
 564 0046 01       		.uleb128 0x1
 565 0047 13       		.uleb128 0x13
 566 0048 00       		.byte	0
 567 0049 00       		.byte	0
 568 004a 07       		.uleb128 0x7
 569 004b 0D       		.uleb128 0xd
 570 004c 00       		.byte	0
 571 004d 03       		.uleb128 0x3
 572 004e 0E       		.uleb128 0xe
 573 004f 3A       		.uleb128 0x3a
 574 0050 0B       		.uleb128 0xb
 575 0051 3B       		.uleb128 0x3b
 576 0052 0B       		.uleb128 0xb
 577 0053 49       		.uleb128 0x49
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 24


 578 0054 13       		.uleb128 0x13
 579 0055 38       		.uleb128 0x38
 580 0056 0B       		.uleb128 0xb
 581 0057 00       		.byte	0
 582 0058 00       		.byte	0
 583 0059 08       		.uleb128 0x8
 584 005a 16       		.uleb128 0x16
 585 005b 00       		.byte	0
 586 005c 03       		.uleb128 0x3
 587 005d 0E       		.uleb128 0xe
 588 005e 3A       		.uleb128 0x3a
 589 005f 0B       		.uleb128 0xb
 590 0060 3B       		.uleb128 0x3b
 591 0061 0B       		.uleb128 0xb
 592 0062 49       		.uleb128 0x49
 593 0063 13       		.uleb128 0x13
 594 0064 00       		.byte	0
 595 0065 00       		.byte	0
 596 0066 09       		.uleb128 0x9
 597 0067 0D       		.uleb128 0xd
 598 0068 00       		.byte	0
 599 0069 03       		.uleb128 0x3
 600 006a 08       		.uleb128 0x8
 601 006b 3A       		.uleb128 0x3a
 602 006c 0B       		.uleb128 0xb
 603 006d 3B       		.uleb128 0x3b
 604 006e 0B       		.uleb128 0xb
 605 006f 49       		.uleb128 0x49
 606 0070 13       		.uleb128 0x13
 607 0071 38       		.uleb128 0x38
 608 0072 0B       		.uleb128 0xb
 609 0073 00       		.byte	0
 610 0074 00       		.byte	0
 611 0075 0A       		.uleb128 0xa
 612 0076 01       		.uleb128 0x1
 613 0077 01       		.byte	0x1
 614 0078 49       		.uleb128 0x49
 615 0079 13       		.uleb128 0x13
 616 007a 01       		.uleb128 0x1
 617 007b 13       		.uleb128 0x13
 618 007c 00       		.byte	0
 619 007d 00       		.byte	0
 620 007e 0B       		.uleb128 0xb
 621 007f 21       		.uleb128 0x21
 622 0080 00       		.byte	0
 623 0081 49       		.uleb128 0x49
 624 0082 13       		.uleb128 0x13
 625 0083 2F       		.uleb128 0x2f
 626 0084 0B       		.uleb128 0xb
 627 0085 00       		.byte	0
 628 0086 00       		.byte	0
 629 0087 0C       		.uleb128 0xc
 630 0088 13       		.uleb128 0x13
 631 0089 01       		.byte	0x1
 632 008a 0B       		.uleb128 0xb
 633 008b 0B       		.uleb128 0xb
 634 008c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 25


 635 008d 0B       		.uleb128 0xb
 636 008e 3B       		.uleb128 0x3b
 637 008f 05       		.uleb128 0x5
 638 0090 01       		.uleb128 0x1
 639 0091 13       		.uleb128 0x13
 640 0092 00       		.byte	0
 641 0093 00       		.byte	0
 642 0094 0D       		.uleb128 0xd
 643 0095 0D       		.uleb128 0xd
 644 0096 00       		.byte	0
 645 0097 03       		.uleb128 0x3
 646 0098 0E       		.uleb128 0xe
 647 0099 3A       		.uleb128 0x3a
 648 009a 0B       		.uleb128 0xb
 649 009b 3B       		.uleb128 0x3b
 650 009c 05       		.uleb128 0x5
 651 009d 49       		.uleb128 0x49
 652 009e 13       		.uleb128 0x13
 653 009f 38       		.uleb128 0x38
 654 00a0 0B       		.uleb128 0xb
 655 00a1 00       		.byte	0
 656 00a2 00       		.byte	0
 657 00a3 0E       		.uleb128 0xe
 658 00a4 2E       		.uleb128 0x2e
 659 00a5 00       		.byte	0
 660 00a6 3F       		.uleb128 0x3f
 661 00a7 19       		.uleb128 0x19
 662 00a8 03       		.uleb128 0x3
 663 00a9 0E       		.uleb128 0xe
 664 00aa 3A       		.uleb128 0x3a
 665 00ab 0B       		.uleb128 0xb
 666 00ac 3B       		.uleb128 0x3b
 667 00ad 0B       		.uleb128 0xb
 668 00ae 27       		.uleb128 0x27
 669 00af 19       		.uleb128 0x19
 670 00b0 11       		.uleb128 0x11
 671 00b1 01       		.uleb128 0x1
 672 00b2 12       		.uleb128 0x12
 673 00b3 06       		.uleb128 0x6
 674 00b4 40       		.uleb128 0x40
 675 00b5 18       		.uleb128 0x18
 676 00b6 9742     		.uleb128 0x2117
 677 00b8 19       		.uleb128 0x19
 678 00b9 00       		.byte	0
 679 00ba 00       		.byte	0
 680 00bb 0F       		.uleb128 0xf
 681 00bc 2E       		.uleb128 0x2e
 682 00bd 00       		.byte	0
 683 00be 3F       		.uleb128 0x3f
 684 00bf 19       		.uleb128 0x19
 685 00c0 03       		.uleb128 0x3
 686 00c1 0E       		.uleb128 0xe
 687 00c2 3A       		.uleb128 0x3a
 688 00c3 0B       		.uleb128 0xb
 689 00c4 3B       		.uleb128 0x3b
 690 00c5 05       		.uleb128 0x5
 691 00c6 27       		.uleb128 0x27
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 26


 692 00c7 19       		.uleb128 0x19
 693 00c8 11       		.uleb128 0x11
 694 00c9 01       		.uleb128 0x1
 695 00ca 12       		.uleb128 0x12
 696 00cb 06       		.uleb128 0x6
 697 00cc 40       		.uleb128 0x40
 698 00cd 18       		.uleb128 0x18
 699 00ce 9742     		.uleb128 0x2117
 700 00d0 19       		.uleb128 0x19
 701 00d1 00       		.byte	0
 702 00d2 00       		.byte	0
 703 00d3 10       		.uleb128 0x10
 704 00d4 2E       		.uleb128 0x2e
 705 00d5 01       		.byte	0x1
 706 00d6 3F       		.uleb128 0x3f
 707 00d7 19       		.uleb128 0x19
 708 00d8 03       		.uleb128 0x3
 709 00d9 0E       		.uleb128 0xe
 710 00da 3A       		.uleb128 0x3a
 711 00db 0B       		.uleb128 0xb
 712 00dc 3B       		.uleb128 0x3b
 713 00dd 05       		.uleb128 0x5
 714 00de 27       		.uleb128 0x27
 715 00df 19       		.uleb128 0x19
 716 00e0 11       		.uleb128 0x11
 717 00e1 01       		.uleb128 0x1
 718 00e2 12       		.uleb128 0x12
 719 00e3 06       		.uleb128 0x6
 720 00e4 40       		.uleb128 0x40
 721 00e5 18       		.uleb128 0x18
 722 00e6 9742     		.uleb128 0x2117
 723 00e8 19       		.uleb128 0x19
 724 00e9 01       		.uleb128 0x1
 725 00ea 13       		.uleb128 0x13
 726 00eb 00       		.byte	0
 727 00ec 00       		.byte	0
 728 00ed 11       		.uleb128 0x11
 729 00ee 898201   		.uleb128 0x4109
 730 00f1 00       		.byte	0
 731 00f2 11       		.uleb128 0x11
 732 00f3 01       		.uleb128 0x1
 733 00f4 31       		.uleb128 0x31
 734 00f5 13       		.uleb128 0x13
 735 00f6 00       		.byte	0
 736 00f7 00       		.byte	0
 737 00f8 12       		.uleb128 0x12
 738 00f9 34       		.uleb128 0x34
 739 00fa 00       		.byte	0
 740 00fb 03       		.uleb128 0x3
 741 00fc 0E       		.uleb128 0xe
 742 00fd 3A       		.uleb128 0x3a
 743 00fe 0B       		.uleb128 0xb
 744 00ff 3B       		.uleb128 0x3b
 745 0100 0B       		.uleb128 0xb
 746 0101 49       		.uleb128 0x49
 747 0102 13       		.uleb128 0x13
 748 0103 3F       		.uleb128 0x3f
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 27


 749 0104 19       		.uleb128 0x19
 750 0105 3C       		.uleb128 0x3c
 751 0106 19       		.uleb128 0x19
 752 0107 00       		.byte	0
 753 0108 00       		.byte	0
 754 0109 13       		.uleb128 0x13
 755 010a 2E       		.uleb128 0x2e
 756 010b 00       		.byte	0
 757 010c 3F       		.uleb128 0x3f
 758 010d 19       		.uleb128 0x19
 759 010e 03       		.uleb128 0x3
 760 010f 0E       		.uleb128 0xe
 761 0110 3A       		.uleb128 0x3a
 762 0111 0B       		.uleb128 0xb
 763 0112 3B       		.uleb128 0x3b
 764 0113 0B       		.uleb128 0xb
 765 0114 27       		.uleb128 0x27
 766 0115 19       		.uleb128 0x19
 767 0116 3C       		.uleb128 0x3c
 768 0117 19       		.uleb128 0x19
 769 0118 00       		.byte	0
 770 0119 00       		.byte	0
 771 011a 00       		.byte	0
 772              		.section	.debug_aranges,"",%progbits
 773 0000 3C000000 		.4byte	0x3c
 774 0004 0200     		.2byte	0x2
 775 0006 00000000 		.4byte	.Ldebug_info0
 776 000a 04       		.byte	0x4
 777 000b 00       		.byte	0
 778 000c 0000     		.2byte	0
 779 000e 0000     		.2byte	0
 780 0010 00000000 		.4byte	.LFB0
 781 0014 38000000 		.4byte	.LFE0-.LFB0
 782 0018 00000000 		.4byte	.LFB1
 783 001c 3C000000 		.4byte	.LFE1-.LFB1
 784 0020 00000000 		.4byte	.LFB2
 785 0024 44000000 		.4byte	.LFE2-.LFB2
 786 0028 00000000 		.4byte	.LFB3
 787 002c 02000000 		.4byte	.LFE3-.LFB3
 788 0030 00000000 		.4byte	.LFB4
 789 0034 08000000 		.4byte	.LFE4-.LFB4
 790 0038 00000000 		.4byte	0
 791 003c 00000000 		.4byte	0
 792              		.section	.debug_ranges,"",%progbits
 793              	.Ldebug_ranges0:
 794 0000 00000000 		.4byte	.LFB0
 795 0004 38000000 		.4byte	.LFE0
 796 0008 00000000 		.4byte	.LFB1
 797 000c 3C000000 		.4byte	.LFE1
 798 0010 00000000 		.4byte	.LFB2
 799 0014 44000000 		.4byte	.LFE2
 800 0018 00000000 		.4byte	.LFB3
 801 001c 02000000 		.4byte	.LFE3
 802 0020 00000000 		.4byte	.LFB4
 803 0024 08000000 		.4byte	.LFE4
 804 0028 00000000 		.4byte	0
 805 002c 00000000 		.4byte	0
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 28


 806              		.section	.debug_line,"",%progbits
 807              	.Ldebug_line0:
 808 0000 E4000000 		.section	.debug_str,"MS",%progbits,1
 808      02006A00 
 808      00000201 
 808      FB0E0D00 
 808      01010101 
 809              	.LASF35:
 810 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 810      4152545F 
 810      45505F33 
 810      5F495352 
 810      00
 811              	.LASF42:
 812 0011 55534255 		.ascii	"USBUART_ReInitComponent\000"
 812      4152545F 
 812      5265496E 
 812      6974436F 
 812      6D706F6E 
 813              	.LASF29:
 814 0029 65704372 		.ascii	"epCr0\000"
 814      3000
 815              	.LASF11:
 816 002f 666C6F61 		.ascii	"float\000"
 816      7400
 817              	.LASF37:
 818 0035 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 818      4320342E 
 818      392E3320 
 818      32303135 
 818      30333033 
 819 0068 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 819      20726576 
 819      6973696F 
 819      6E203232 
 819      31323230 
 820 009b 67202D73 		.ascii	"g -std=gnu11 -ffunction-sections -ffat-lto-objects\000"
 820      74643D67 
 820      6E753131 
 820      202D6666 
 820      756E6374 
 821              	.LASF3:
 822 00ce 73686F72 		.ascii	"short unsigned int\000"
 822      7420756E 
 822      7369676E 
 822      65642069 
 822      6E7400
 823              	.LASF34:
 824 00e1 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 824      4152545F 
 824      45505F32 
 824      5F495352 
 824      00
 825              	.LASF36:
 826 00f2 55534255 		.ascii	"USBUART_SOF_ISR\000"
 826      4152545F 
 826      534F465F 
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 29


 826      49535200 
 827              	.LASF39:
 828 0102 433A5C55 		.ascii	"C:\\Users\\student\\Documents\\PSoC Creator\\rbeatt"
 828      73657273 
 828      5C737475 
 828      64656E74 
 828      5C446F63 
 829 0130 69655F66 		.ascii	"ie_final_project\\ConnectFour.cydsn\000"
 829      696E616C 
 829      5F70726F 
 829      6A656374 
 829      5C436F6E 
 830              	.LASF27:
 831 0153 6570436E 		.ascii	"epCnt0\000"
 831      743000
 832              	.LASF28:
 833 015a 6570436E 		.ascii	"epCnt1\000"
 833      743100
 834              	.LASF20:
 835 0161 6570546F 		.ascii	"epToggle\000"
 835      67676C65 
 835      00
 836              	.LASF41:
 837 016a 55534255 		.ascii	"USBUART_EP\000"
 837      4152545F 
 837      455000
 838              	.LASF14:
 839 0175 72656738 		.ascii	"reg8\000"
 839      00
 840              	.LASF5:
 841 017a 6C6F6E67 		.ascii	"long unsigned int\000"
 841      20756E73 
 841      69676E65 
 841      6420696E 
 841      7400
 842              	.LASF21:
 843 018c 61646472 		.ascii	"addr\000"
 843      00
 844              	.LASF31:
 845 0191 73696545 		.ascii	"sieEp\000"
 845      7000
 846              	.LASF32:
 847 0197 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 847      4152545F 
 847      7369655F 
 847      6570735F 
 847      73747275 
 848              	.LASF1:
 849 01ae 756E7369 		.ascii	"unsigned char\000"
 849      676E6564 
 849      20636861 
 849      7200
 850              	.LASF12:
 851 01bc 646F7562 		.ascii	"double\000"
 851      6C6500
 852              	.LASF17:
 853 01c3 61747472 		.ascii	"attrib\000"
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 30


 853      696200
 854              	.LASF23:
 855 01ca 62756666 		.ascii	"buffOffset\000"
 855      4F666673 
 855      657400
 856              	.LASF10:
 857 01d5 75696E74 		.ascii	"uint16\000"
 857      313600
 858              	.LASF18:
 859 01dc 61706945 		.ascii	"apiEpState\000"
 859      70537461 
 859      746500
 860              	.LASF8:
 861 01e7 756E7369 		.ascii	"unsigned int\000"
 861      676E6564 
 861      20696E74 
 861      00
 862              	.LASF7:
 863 01f4 6C6F6E67 		.ascii	"long long unsigned int\000"
 863      206C6F6E 
 863      6720756E 
 863      7369676E 
 863      65642069 
 864              	.LASF19:
 865 020b 68774570 		.ascii	"hwEpState\000"
 865      53746174 
 865      6500
 866              	.LASF38:
 867 0215 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBUART_episr.c\000"
 867      6E657261 
 867      7465645F 
 867      536F7572 
 867      63655C50 
 868              	.LASF30:
 869 023e 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 869      4152545F 
 869      7369655F 
 869      65705F73 
 869      74727563 
 870              	.LASF16:
 871 0254 73697A65 		.ascii	"sizetype\000"
 871      74797065 
 871      00
 872              	.LASF22:
 873 025d 65704D6F 		.ascii	"epMode\000"
 873      646500
 874              	.LASF6:
 875 0264 6C6F6E67 		.ascii	"long long int\000"
 875      206C6F6E 
 875      6720696E 
 875      7400
 876              	.LASF13:
 877 0272 63686172 		.ascii	"char\000"
 877      00
 878              	.LASF24:
 879 0277 62756666 		.ascii	"bufferSize\000"
 879      65725369 
ARM GAS  C:\Users\student\AppData\Local\Temp\cc0M93RX.s 			page 31


 879      7A6500
 880              	.LASF2:
 881 0282 73686F72 		.ascii	"short int\000"
 881      7420696E 
 881      7400
 882              	.LASF40:
 883 028c 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 883      4152545F 
 883      4255535F 
 883      52455345 
 883      545F4953 
 884              	.LASF9:
 885 02a2 75696E74 		.ascii	"uint8\000"
 885      3800
 886              	.LASF25:
 887 02a8 696E7465 		.ascii	"interface\000"
 887      72666163 
 887      6500
 888              	.LASF4:
 889 02b2 6C6F6E67 		.ascii	"long int\000"
 889      20696E74 
 889      00
 890              	.LASF26:
 891 02bb 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 891      42554152 
 891      545F4550 
 891      5F43544C 
 891      5F424C4F 
 892              	.LASF15:
 893 02d2 6C6F6E67 		.ascii	"long double\000"
 893      20646F75 
 893      626C6500 
 894              	.LASF0:
 895 02de 7369676E 		.ascii	"signed char\000"
 895      65642063 
 895      68617200 
 896              	.LASF33:
 897 02ea 55534255 		.ascii	"USBUART_EP_1_ISR\000"
 897      4152545F 
 897      45505F31 
 897      5F495352 
 897      00
 898              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
